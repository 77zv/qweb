import {type NextPage} from "next";
import Head from "next/head";
//import Link from "next/link";
import {signIn, signOut, useSession} from "next-auth/react";
//import {UsersIcon} from '@heroicons/react/24/outline'

//import {api} from "../utils/api";
import Layout from "../components/layout";
import Button from "../components/button";
import {FaGoogle} from "react-icons/fa";
import {Menu} from "@headlessui/react";
import {HandThumbUpIcon, ShareIcon} from "@heroicons/react/20/solid";

function classNames(...classes: string[]) {
    return classes.filter(Boolean).join(' ')
}

const tabs = [
    {name: 'Previous Event', href: '#', current: false},

    {name: 'Current Event', href: '#', current: true},

    {name: 'Next Event', href: '#', current: false},
]

//replace with data taken from server
const events = [
    {
        href: "#",
        id: "000001",
        name: "Stock Picking Competition 2023",
        startDate: "March 1st, 2023",
        endDate: "May 31st, 2023",
        likes: "0",
        description: "Are you an expert in stock picking? Join our Stock Picking Competition 2023 and put your skills to the test. " +
            "Compete against other investors and traders from all over the world to see who can make the most profit in three months. " +
            "Participants must pick a portfolio of five stocks and track their performance until the end of the competition. Prizes will be " +
            "awarded to the top three performers with the highest returns. So, what are you waiting for? Sign up now and show the world your " +
            "stock picking prowess!",
        attachments: [
            {
                name: "event_package_one.zip",
                url: "#"
            }
        ]
    }
];

const Home: NextPage = () => {

    return (
        <>
            <Head>
                <title>Queen's Business Brigade</title>
                <meta name="description" content="Generated by create-t3-app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <Layout>
                <main
                    className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#1e3a8a] to-[#312e81] bg-gray-900 text-gray-100">
                    <HomeContent/>
                </main>
            </Layout>
        </>
    );
};

const HomeContent = () => {
    const {data} = useSession();

    if (!data)
        return (
            <div className="relative bg-white">
                <div className="h-56 bg-indigo-600 sm:h-72 lg:absolute lg:left-0 lg:h-full lg:w-1/2">
                    <img
                        className="h-full w-full object-cover"
                        src="https://cdn.discordapp.com/attachments/958153229491925072/1069855418815365191/Team1-1035367148.png"
                        alt="Support team"
                    />
                </div>
                <div className="relative mx-auto max-w-7xl px-4 py-8 sm:py-12 sm:px-6 lg:py-16">
                    <div className="mx-auto max-w-2xl lg:mr-0 lg:ml-auto lg:w-1/2 lg:max-w-none lg:pl-10">
                        <div>
                            <div>
                                <Button
                                    style={{backgroundColor: '#1e40af', color: '#eff6ff', borderColor: '#312e81'}}
                                    size="xl"
                                    onClick={() => void signIn("google")}
                                >
                                    <div className="flex items-center">
                                        <FaGoogle/> &nbsp; Sign In
                                    </div>
                                </Button>
                            </div>
                        </div>
                        <h2 className="mt-6 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">
                            Queen's Business Brigade
                        </h2>
                        <p className="mt-6 text-lg text-gray-500">
                            The Queens Business Brigade (QBB) is a non-profit organization that aims to create economic
                            opportunities in developing countries by empowering local communities. It is a global
                            movement of students
                            and professionals who are dedicated to making a positive impact in the world through
                            entrepreneurship and business development.
                            The QBB works with local partners to identify needs and opportunities, and then provides
                            training, mentorship, and support to help individuals and communities start and grow their
                            own businesses.
                            The goal of the QBB is to create sustainable and equitable economic growth in developing
                            countries, while also helping to build a more interconnected and equitable global community.
                        </p>
                        <div className="mt-8 overflow-hidden justify-center">
                            <dl className="-mx-8 -mt-8 flex flex-wrap">
                                <div className="flex flex-col px-8 pt-8">
                                    <dt className="order-2 text-base font-medium text-gray-500">Raised</dt>
                                    <dd className="order-1 text-2xl font-bold text-indigo-600 sm:text-3xl sm:tracking-tight">$3</dd>
                                </div>
                                <div className="flex flex-col px-8 pt-8">
                                    <dt className="order-2 text-base font-medium text-gray-500">Communities Helped</dt>
                                    <dd className="order-1 text-2xl font-bold text-indigo-600 sm:text-3xl sm:tracking-tight">0.5</dd>
                                </div>
                                <div className="flex flex-col px-8 pt-8">
                                    <dt className="order-2 text-base font-medium text-gray-500">Embezzled</dt>
                                    <dd className="order-1 text-2xl font-bold text-indigo-600 sm:text-3xl sm:tracking-tight">$10k</dd>
                                </div>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>

        );
    return (
        <div className="flex min-h-0 flex-1 flex-col">
            <div className="flex items-center justify-between px-4 pt-4 pb-2 sm:py-4 sm:px-8">
                <div className="min-h-full">
                    {/* When the mobile menu is open, add `overflow-hidden` to the `body` element to prevent double scrollbars */}
                    <div className="flex justify-center items-center">
                        <h2 className="mt-6 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">
                            Queen's Business Brigade
                        </h2>
                    </div>
                    //need all this shit to center, but it won't :(
                    <div className="flex py-10 justify-center items-center">
                        <div
                            className="mx-auto max-w-3xl sm:px-6 lg:grid lg:max-w-7xl lg:grid-cols-12 lg:gap-8 lg:px-8">
                            <main className="lg:col-span-9 xl:col-span-6">
                                <div className="px-4 sm:px-0">
                                    <div className="sm:hidden">
                                        <select
                                            id="events-tabs"
                                            className="block w-full rounded-md border-gray-300 text-base font-medium text-gray-900 shadow-sm focus:border-rose-500 focus:ring-rose-500"
                                            defaultValue={(tabs.find((tab) => tab.current) || {}).name}
                                        >
                                            {tabs.map((tab) => (
                                                <option key={tab.name}>{tab.name}</option>
                                            ))}
                                        </select>
                                    </div>
                                    <div className="hidden sm:block">
                                        <nav className="isolate flex divide-x divide-gray-200 rounded-lg shadow"
                                             aria-label="Tabs">
                                            {tabs.map((tab, tabIdx) => (
                                                <a
                                                    key={tab.name}
                                                    href={tab.href}
                                                    aria-current={tab.current ? 'page' : undefined}
                                                    className={classNames(
                                                        tab.current ? 'text-gray-900' : 'text-gray-500 hover:text-gray-700',
                                                        tabIdx === 0 ? 'rounded-l-lg' : '',
                                                        tabIdx === tabs.length - 1 ? 'rounded-r-lg' : '',
                                                        'group relative min-w-0 flex-1 overflow-hidden bg-white py-4 px-6 text-sm font-medium text-center hover:bg-gray-50 focus:z-10'
                                                    )}
                                                >
                                                    <span>{tab.name}</span>
                                                    <span
                                                        aria-hidden="true"
                                                        className={classNames(
                                                            tab.current ? 'bg-rose-500' : 'bg-transparent',
                                                            'absolute inset-x-0 bottom-0 h-0.5'
                                                        )}
                                                    />
                                                </a>
                                            ))}
                                        </nav>
                                    </div>
                                </div>
                                <div className="mt-4">
                                    <h1 className="sr-only">Recent Events</h1>
                                    <ul role="list" className="space-y-4">
                                        {events.map((event) => (
                                            <li key={event.id}
                                                className="bg-white px-4 py-6 shadow sm:rounded-lg sm:p-6">
                                                <article aria-labelledby={'event-title-' + event.id}>
                                                    <div>
                                                        <div className="flex space-x-3">
                                                            <div className="min-w-0 flex-1">
                                                                <p className="text-sm font-medium text-gray-900">
                                                                    <div>
                                                                        {event.startDate + ' - ' + event.endDate}
                                                                    </div>
                                                                </p>
                                                            </div>
                                                            <div className="flex flex-shrink-0 self-center">
                                                                <Menu as="div"
                                                                      className="relative inline-block text-left">
                                                                </Menu>
                                                            </div>
                                                        </div>
                                                        <h2 id={'question-title-' + event.id}
                                                            className="mt-4 text-base font-medium text-gray-900">
                                                            {event.name}
                                                        </h2>
                                                    </div>
                                                    <div
                                                        className="mt-2 space-y-4 text-sm text-gray-700"
                                                        dangerouslySetInnerHTML={{__html: event.description}}
                                                    />
                                                    <div className="mt-6 flex justify-between space-x-8">
                                                        <div className="flex space-x-6">
                            <span className="inline-flex items-center text-sm">
                              <button type="button" className="inline-flex space-x-2 text-gray-400 hover:text-gray-500">
                                <HandThumbUpIcon className="h-5 w-5" aria-hidden="true"/>
                                <span className="font-medium text-gray-900">{event.likes}</span>
                                <span className="sr-only">likes</span>
                              </button>
                            </span>
                                                        </div>
                                                        <div className="flex text-sm">
                            <span className="inline-flex items-center text-sm">
                              <button type="button" className="inline-flex space-x-2 text-gray-400 hover:text-gray-500">
                                <ShareIcon className="h-5 w-5" aria-hidden="true"/>
                                <span className="font-medium text-gray-900">Share</span>
                              </button>
                            </span>
                                                        </div>
                                                    </div>
                                                </article>
                                            </li>
                                        ))}
                                    </ul>
                                </div>
                            </main>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );

}

export default Home;


// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();
//
//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined }
//   );
//
//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
